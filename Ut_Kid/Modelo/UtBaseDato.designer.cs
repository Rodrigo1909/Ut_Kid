#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Modelo
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="ut_kids")]
	public partial class UtBaseDatoDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertTblActividadTaller(TblActividadTaller instance);
    partial void UpdateTblActividadTaller(TblActividadTaller instance);
    partial void DeleteTblActividadTaller(TblActividadTaller instance);
    partial void InsertTblUser(TblUser instance);
    partial void UpdateTblUser(TblUser instance);
    partial void DeleteTblUser(TblUser instance);
    partial void InsertTblAsignacionNino(TblAsignacionNino instance);
    partial void UpdateTblAsignacionNino(TblAsignacionNino instance);
    partial void DeleteTblAsignacionNino(TblAsignacionNino instance);
    partial void InsertTblAsignacionProfesor(TblAsignacionProfesor instance);
    partial void UpdateTblAsignacionProfesor(TblAsignacionProfesor instance);
    partial void DeleteTblAsignacionProfesor(TblAsignacionProfesor instance);
    partial void InsertTblDireccion(TblDireccion instance);
    partial void UpdateTblDireccion(TblDireccion instance);
    partial void DeleteTblDireccion(TblDireccion instance);
    partial void InsertTblModederoNino(TblModederoNino instance);
    partial void UpdateTblModederoNino(TblModederoNino instance);
    partial void DeleteTblModederoNino(TblModederoNino instance);
    partial void InsertTblNino(TblNino instance);
    partial void UpdateTblNino(TblNino instance);
    partial void DeleteTblNino(TblNino instance);
    partial void InsertTblPadre(TblPadre instance);
    partial void UpdateTblPadre(TblPadre instance);
    partial void DeleteTblPadre(TblPadre instance);
    partial void InsertTblProfesor(TblProfesor instance);
    partial void UpdateTblProfesor(TblProfesor instance);
    partial void DeleteTblProfesor(TblProfesor instance);
    partial void InsertTblTaller(TblTaller instance);
    partial void UpdateTblTaller(TblTaller instance);
    partial void DeleteTblTaller(TblTaller instance);
    partial void InsertTblTelefono(TblTelefono instance);
    partial void UpdateTblTelefono(TblTelefono instance);
    partial void DeleteTblTelefono(TblTelefono instance);
    #endregion
		
		public UtBaseDatoDataContext() : 
				base(global::Modelo.Properties.Settings.Default.ut_kidsConnectionString1, mappingSource)
		{
			OnCreated();
		}
		
		public UtBaseDatoDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public UtBaseDatoDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public UtBaseDatoDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public UtBaseDatoDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<TblActividadTaller> TblActividadTallers
		{
			get
			{
				return this.GetTable<TblActividadTaller>();
			}
		}
		
		public System.Data.Linq.Table<TblUser> TblUsers
		{
			get
			{
				return this.GetTable<TblUser>();
			}
		}
		
		public System.Data.Linq.Table<TblAsignacionNino> TblAsignacionNinos
		{
			get
			{
				return this.GetTable<TblAsignacionNino>();
			}
		}
		
		public System.Data.Linq.Table<TblAsignacionProfesor> TblAsignacionProfesors
		{
			get
			{
				return this.GetTable<TblAsignacionProfesor>();
			}
		}
		
		public System.Data.Linq.Table<TblDireccion> TblDireccions
		{
			get
			{
				return this.GetTable<TblDireccion>();
			}
		}
		
		public System.Data.Linq.Table<TblModederoNino> TblModederoNinos
		{
			get
			{
				return this.GetTable<TblModederoNino>();
			}
		}
		
		public System.Data.Linq.Table<TblNino> TblNinos
		{
			get
			{
				return this.GetTable<TblNino>();
			}
		}
		
		public System.Data.Linq.Table<TblPadre> TblPadres
		{
			get
			{
				return this.GetTable<TblPadre>();
			}
		}
		
		public System.Data.Linq.Table<TblProfesor> TblProfesors
		{
			get
			{
				return this.GetTable<TblProfesor>();
			}
		}
		
		public System.Data.Linq.Table<TblTaller> TblTallers
		{
			get
			{
				return this.GetTable<TblTaller>();
			}
		}
		
		public System.Data.Linq.Table<TblTelefono> TblTelefonos
		{
			get
			{
				return this.GetTable<TblTelefono>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TblActividadTaller")]
	public partial class TblActividadTaller : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _idTaller;
		
		private string _strvalor;
		
		private string _strdescripcion;
		
		private EntityRef<TblTaller> _TblTaller;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnidTallerChanging(System.Nullable<int> value);
    partial void OnidTallerChanged();
    partial void OnstrvalorChanging(string value);
    partial void OnstrvalorChanged();
    partial void OnstrdescripcionChanging(string value);
    partial void OnstrdescripcionChanged();
    #endregion
		
		public TblActividadTaller()
		{
			this._TblTaller = default(EntityRef<TblTaller>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idTaller", DbType="Int")]
		public System.Nullable<int> idTaller
		{
			get
			{
				return this._idTaller;
			}
			set
			{
				if ((this._idTaller != value))
				{
					if (this._TblTaller.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidTallerChanging(value);
					this.SendPropertyChanging();
					this._idTaller = value;
					this.SendPropertyChanged("idTaller");
					this.OnidTallerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strvalor", DbType="VarChar(70) NOT NULL", CanBeNull=false)]
		public string strvalor
		{
			get
			{
				return this._strvalor;
			}
			set
			{
				if ((this._strvalor != value))
				{
					this.OnstrvalorChanging(value);
					this.SendPropertyChanging();
					this._strvalor = value;
					this.SendPropertyChanged("strvalor");
					this.OnstrvalorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strdescripcion", DbType="VarChar(100)")]
		public string strdescripcion
		{
			get
			{
				return this._strdescripcion;
			}
			set
			{
				if ((this._strdescripcion != value))
				{
					this.OnstrdescripcionChanging(value);
					this.SendPropertyChanging();
					this._strdescripcion = value;
					this.SendPropertyChanged("strdescripcion");
					this.OnstrdescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TblTaller_TblActividadTaller", Storage="_TblTaller", ThisKey="idTaller", OtherKey="id", IsForeignKey=true)]
		public TblTaller TblTaller
		{
			get
			{
				return this._TblTaller.Entity;
			}
			set
			{
				TblTaller previousValue = this._TblTaller.Entity;
				if (((previousValue != value) 
							|| (this._TblTaller.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TblTaller.Entity = null;
						previousValue.TblActividadTallers.Remove(this);
					}
					this._TblTaller.Entity = value;
					if ((value != null))
					{
						value.TblActividadTallers.Add(this);
						this._idTaller = value.id;
					}
					else
					{
						this._idTaller = default(Nullable<int>);
					}
					this.SendPropertyChanged("TblTaller");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TblUser")]
	public partial class TblUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _strusuario;
		
		private string _strpass;
		
		private string _strtipoUsuario;
		
		private EntitySet<TblNino> _TblNinos;
		
		private EntitySet<TblPadre> _TblPadres;
		
		private EntitySet<TblProfesor> _TblProfesors;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnstrusuarioChanging(string value);
    partial void OnstrusuarioChanged();
    partial void OnstrpassChanging(string value);
    partial void OnstrpassChanged();
    partial void OnstrtipoUsuarioChanging(string value);
    partial void OnstrtipoUsuarioChanged();
    #endregion
		
		public TblUser()
		{
			this._TblNinos = new EntitySet<TblNino>(new Action<TblNino>(this.attach_TblNinos), new Action<TblNino>(this.detach_TblNinos));
			this._TblPadres = new EntitySet<TblPadre>(new Action<TblPadre>(this.attach_TblPadres), new Action<TblPadre>(this.detach_TblPadres));
			this._TblProfesors = new EntitySet<TblProfesor>(new Action<TblProfesor>(this.attach_TblProfesors), new Action<TblProfesor>(this.detach_TblProfesors));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strusuario", DbType="VarChar(200)")]
		public string strusuario
		{
			get
			{
				return this._strusuario;
			}
			set
			{
				if ((this._strusuario != value))
				{
					this.OnstrusuarioChanging(value);
					this.SendPropertyChanging();
					this._strusuario = value;
					this.SendPropertyChanged("strusuario");
					this.OnstrusuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strpass", DbType="VarChar(200)")]
		public string strpass
		{
			get
			{
				return this._strpass;
			}
			set
			{
				if ((this._strpass != value))
				{
					this.OnstrpassChanging(value);
					this.SendPropertyChanging();
					this._strpass = value;
					this.SendPropertyChanged("strpass");
					this.OnstrpassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strtipoUsuario", DbType="VarChar(150)")]
		public string strtipoUsuario
		{
			get
			{
				return this._strtipoUsuario;
			}
			set
			{
				if ((this._strtipoUsuario != value))
				{
					this.OnstrtipoUsuarioChanging(value);
					this.SendPropertyChanging();
					this._strtipoUsuario = value;
					this.SendPropertyChanged("strtipoUsuario");
					this.OnstrtipoUsuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TblUser_TblNino", Storage="_TblNinos", ThisKey="id", OtherKey="idUser")]
		public EntitySet<TblNino> TblNinos
		{
			get
			{
				return this._TblNinos;
			}
			set
			{
				this._TblNinos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TblUser_TblPadre", Storage="_TblPadres", ThisKey="id", OtherKey="idUser")]
		public EntitySet<TblPadre> TblPadres
		{
			get
			{
				return this._TblPadres;
			}
			set
			{
				this._TblPadres.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TblUser_TblProfesor", Storage="_TblProfesors", ThisKey="id", OtherKey="idUser")]
		public EntitySet<TblProfesor> TblProfesors
		{
			get
			{
				return this._TblProfesors;
			}
			set
			{
				this._TblProfesors.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TblNinos(TblNino entity)
		{
			this.SendPropertyChanging();
			entity.TblUser = this;
		}
		
		private void detach_TblNinos(TblNino entity)
		{
			this.SendPropertyChanging();
			entity.TblUser = null;
		}
		
		private void attach_TblPadres(TblPadre entity)
		{
			this.SendPropertyChanging();
			entity.TblUser = this;
		}
		
		private void detach_TblPadres(TblPadre entity)
		{
			this.SendPropertyChanging();
			entity.TblUser = null;
		}
		
		private void attach_TblProfesors(TblProfesor entity)
		{
			this.SendPropertyChanging();
			entity.TblUser = this;
		}
		
		private void detach_TblProfesors(TblProfesor entity)
		{
			this.SendPropertyChanging();
			entity.TblUser = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TblAsignacionNino")]
	public partial class TblAsignacionNino : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _idNino;
		
		private System.Nullable<int> _idAsignacionProfesor;
		
		private EntityRef<TblAsignacionProfesor> _TblAsignacionProfesor;
		
		private EntityRef<TblNino> _TblNino;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnidNinoChanging(System.Nullable<int> value);
    partial void OnidNinoChanged();
    partial void OnidAsignacionProfesorChanging(System.Nullable<int> value);
    partial void OnidAsignacionProfesorChanged();
    #endregion
		
		public TblAsignacionNino()
		{
			this._TblAsignacionProfesor = default(EntityRef<TblAsignacionProfesor>);
			this._TblNino = default(EntityRef<TblNino>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idNino", DbType="Int")]
		public System.Nullable<int> idNino
		{
			get
			{
				return this._idNino;
			}
			set
			{
				if ((this._idNino != value))
				{
					if (this._TblNino.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidNinoChanging(value);
					this.SendPropertyChanging();
					this._idNino = value;
					this.SendPropertyChanged("idNino");
					this.OnidNinoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idAsignacionProfesor", DbType="Int")]
		public System.Nullable<int> idAsignacionProfesor
		{
			get
			{
				return this._idAsignacionProfesor;
			}
			set
			{
				if ((this._idAsignacionProfesor != value))
				{
					if (this._TblAsignacionProfesor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidAsignacionProfesorChanging(value);
					this.SendPropertyChanging();
					this._idAsignacionProfesor = value;
					this.SendPropertyChanged("idAsignacionProfesor");
					this.OnidAsignacionProfesorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TblAsignacionProfesor_TblAsignacionNino", Storage="_TblAsignacionProfesor", ThisKey="idAsignacionProfesor", OtherKey="id", IsForeignKey=true)]
		public TblAsignacionProfesor TblAsignacionProfesor
		{
			get
			{
				return this._TblAsignacionProfesor.Entity;
			}
			set
			{
				TblAsignacionProfesor previousValue = this._TblAsignacionProfesor.Entity;
				if (((previousValue != value) 
							|| (this._TblAsignacionProfesor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TblAsignacionProfesor.Entity = null;
						previousValue.TblAsignacionNinos.Remove(this);
					}
					this._TblAsignacionProfesor.Entity = value;
					if ((value != null))
					{
						value.TblAsignacionNinos.Add(this);
						this._idAsignacionProfesor = value.id;
					}
					else
					{
						this._idAsignacionProfesor = default(Nullable<int>);
					}
					this.SendPropertyChanged("TblAsignacionProfesor");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TblNino_TblAsignacionNino", Storage="_TblNino", ThisKey="idNino", OtherKey="id", IsForeignKey=true)]
		public TblNino TblNino
		{
			get
			{
				return this._TblNino.Entity;
			}
			set
			{
				TblNino previousValue = this._TblNino.Entity;
				if (((previousValue != value) 
							|| (this._TblNino.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TblNino.Entity = null;
						previousValue.TblAsignacionNinos.Remove(this);
					}
					this._TblNino.Entity = value;
					if ((value != null))
					{
						value.TblAsignacionNinos.Add(this);
						this._idNino = value.id;
					}
					else
					{
						this._idNino = default(Nullable<int>);
					}
					this.SendPropertyChanged("TblNino");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TblAsignacionProfesor")]
	public partial class TblAsignacionProfesor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _idProfesor;
		
		private System.Nullable<int> _idTaller;
		
		private EntitySet<TblAsignacionNino> _TblAsignacionNinos;
		
		private EntityRef<TblProfesor> _TblProfesor;
		
		private EntityRef<TblTaller> _TblTaller;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnidProfesorChanging(System.Nullable<int> value);
    partial void OnidProfesorChanged();
    partial void OnidTallerChanging(System.Nullable<int> value);
    partial void OnidTallerChanged();
    #endregion
		
		public TblAsignacionProfesor()
		{
			this._TblAsignacionNinos = new EntitySet<TblAsignacionNino>(new Action<TblAsignacionNino>(this.attach_TblAsignacionNinos), new Action<TblAsignacionNino>(this.detach_TblAsignacionNinos));
			this._TblProfesor = default(EntityRef<TblProfesor>);
			this._TblTaller = default(EntityRef<TblTaller>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idProfesor", DbType="Int")]
		public System.Nullable<int> idProfesor
		{
			get
			{
				return this._idProfesor;
			}
			set
			{
				if ((this._idProfesor != value))
				{
					if (this._TblProfesor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidProfesorChanging(value);
					this.SendPropertyChanging();
					this._idProfesor = value;
					this.SendPropertyChanged("idProfesor");
					this.OnidProfesorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idTaller", DbType="Int")]
		public System.Nullable<int> idTaller
		{
			get
			{
				return this._idTaller;
			}
			set
			{
				if ((this._idTaller != value))
				{
					if (this._TblTaller.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidTallerChanging(value);
					this.SendPropertyChanging();
					this._idTaller = value;
					this.SendPropertyChanged("idTaller");
					this.OnidTallerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TblAsignacionProfesor_TblAsignacionNino", Storage="_TblAsignacionNinos", ThisKey="id", OtherKey="idAsignacionProfesor")]
		public EntitySet<TblAsignacionNino> TblAsignacionNinos
		{
			get
			{
				return this._TblAsignacionNinos;
			}
			set
			{
				this._TblAsignacionNinos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TblProfesor_TblAsignacionProfesor", Storage="_TblProfesor", ThisKey="idProfesor", OtherKey="id", IsForeignKey=true)]
		public TblProfesor TblProfesor
		{
			get
			{
				return this._TblProfesor.Entity;
			}
			set
			{
				TblProfesor previousValue = this._TblProfesor.Entity;
				if (((previousValue != value) 
							|| (this._TblProfesor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TblProfesor.Entity = null;
						previousValue.TblAsignacionProfesors.Remove(this);
					}
					this._TblProfesor.Entity = value;
					if ((value != null))
					{
						value.TblAsignacionProfesors.Add(this);
						this._idProfesor = value.id;
					}
					else
					{
						this._idProfesor = default(Nullable<int>);
					}
					this.SendPropertyChanged("TblProfesor");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TblTaller_TblAsignacionProfesor", Storage="_TblTaller", ThisKey="idTaller", OtherKey="id", IsForeignKey=true)]
		public TblTaller TblTaller
		{
			get
			{
				return this._TblTaller.Entity;
			}
			set
			{
				TblTaller previousValue = this._TblTaller.Entity;
				if (((previousValue != value) 
							|| (this._TblTaller.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TblTaller.Entity = null;
						previousValue.TblAsignacionProfesors.Remove(this);
					}
					this._TblTaller.Entity = value;
					if ((value != null))
					{
						value.TblAsignacionProfesors.Add(this);
						this._idTaller = value.id;
					}
					else
					{
						this._idTaller = default(Nullable<int>);
					}
					this.SendPropertyChanged("TblTaller");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TblAsignacionNinos(TblAsignacionNino entity)
		{
			this.SendPropertyChanging();
			entity.TblAsignacionProfesor = this;
		}
		
		private void detach_TblAsignacionNinos(TblAsignacionNino entity)
		{
			this.SendPropertyChanging();
			entity.TblAsignacionProfesor = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TblDireccion")]
	public partial class TblDireccion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _strestado;
		
		private string _strmunicipio;
		
		private string _strcolonia;
		
		private string _strcalle;
		
		private System.Nullable<int> _intcodpost;
		
		private string _strnumInt;
		
		private string _strnumExt;
		
		private string _strreferencias;
		
		private EntitySet<TblPadre> _TblPadres;
		
		private EntitySet<TblProfesor> _TblProfesors;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnstrestadoChanging(string value);
    partial void OnstrestadoChanged();
    partial void OnstrmunicipioChanging(string value);
    partial void OnstrmunicipioChanged();
    partial void OnstrcoloniaChanging(string value);
    partial void OnstrcoloniaChanged();
    partial void OnstrcalleChanging(string value);
    partial void OnstrcalleChanged();
    partial void OnintcodpostChanging(System.Nullable<int> value);
    partial void OnintcodpostChanged();
    partial void OnstrnumIntChanging(string value);
    partial void OnstrnumIntChanged();
    partial void OnstrnumExtChanging(string value);
    partial void OnstrnumExtChanged();
    partial void OnstrreferenciasChanging(string value);
    partial void OnstrreferenciasChanged();
    #endregion
		
		public TblDireccion()
		{
			this._TblPadres = new EntitySet<TblPadre>(new Action<TblPadre>(this.attach_TblPadres), new Action<TblPadre>(this.detach_TblPadres));
			this._TblProfesors = new EntitySet<TblProfesor>(new Action<TblProfesor>(this.attach_TblProfesors), new Action<TblProfesor>(this.detach_TblProfesors));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strestado", DbType="VarChar(150)")]
		public string strestado
		{
			get
			{
				return this._strestado;
			}
			set
			{
				if ((this._strestado != value))
				{
					this.OnstrestadoChanging(value);
					this.SendPropertyChanging();
					this._strestado = value;
					this.SendPropertyChanged("strestado");
					this.OnstrestadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strmunicipio", DbType="VarChar(150)")]
		public string strmunicipio
		{
			get
			{
				return this._strmunicipio;
			}
			set
			{
				if ((this._strmunicipio != value))
				{
					this.OnstrmunicipioChanging(value);
					this.SendPropertyChanging();
					this._strmunicipio = value;
					this.SendPropertyChanged("strmunicipio");
					this.OnstrmunicipioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strcolonia", DbType="VarChar(150)")]
		public string strcolonia
		{
			get
			{
				return this._strcolonia;
			}
			set
			{
				if ((this._strcolonia != value))
				{
					this.OnstrcoloniaChanging(value);
					this.SendPropertyChanging();
					this._strcolonia = value;
					this.SendPropertyChanged("strcolonia");
					this.OnstrcoloniaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strcalle", DbType="VarChar(150)")]
		public string strcalle
		{
			get
			{
				return this._strcalle;
			}
			set
			{
				if ((this._strcalle != value))
				{
					this.OnstrcalleChanging(value);
					this.SendPropertyChanging();
					this._strcalle = value;
					this.SendPropertyChanged("strcalle");
					this.OnstrcalleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_intcodpost", DbType="Int")]
		public System.Nullable<int> intcodpost
		{
			get
			{
				return this._intcodpost;
			}
			set
			{
				if ((this._intcodpost != value))
				{
					this.OnintcodpostChanging(value);
					this.SendPropertyChanging();
					this._intcodpost = value;
					this.SendPropertyChanged("intcodpost");
					this.OnintcodpostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strnumInt", DbType="VarChar(50)")]
		public string strnumInt
		{
			get
			{
				return this._strnumInt;
			}
			set
			{
				if ((this._strnumInt != value))
				{
					this.OnstrnumIntChanging(value);
					this.SendPropertyChanging();
					this._strnumInt = value;
					this.SendPropertyChanged("strnumInt");
					this.OnstrnumIntChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strnumExt", DbType="VarChar(50)")]
		public string strnumExt
		{
			get
			{
				return this._strnumExt;
			}
			set
			{
				if ((this._strnumExt != value))
				{
					this.OnstrnumExtChanging(value);
					this.SendPropertyChanging();
					this._strnumExt = value;
					this.SendPropertyChanged("strnumExt");
					this.OnstrnumExtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strreferencias", DbType="VarChar(400)")]
		public string strreferencias
		{
			get
			{
				return this._strreferencias;
			}
			set
			{
				if ((this._strreferencias != value))
				{
					this.OnstrreferenciasChanging(value);
					this.SendPropertyChanging();
					this._strreferencias = value;
					this.SendPropertyChanged("strreferencias");
					this.OnstrreferenciasChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TblDireccion_TblPadre", Storage="_TblPadres", ThisKey="id", OtherKey="idDireccion")]
		public EntitySet<TblPadre> TblPadres
		{
			get
			{
				return this._TblPadres;
			}
			set
			{
				this._TblPadres.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TblDireccion_TblProfesor", Storage="_TblProfesors", ThisKey="id", OtherKey="idDireccion")]
		public EntitySet<TblProfesor> TblProfesors
		{
			get
			{
				return this._TblProfesors;
			}
			set
			{
				this._TblProfesors.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TblPadres(TblPadre entity)
		{
			this.SendPropertyChanging();
			entity.TblDireccion = this;
		}
		
		private void detach_TblPadres(TblPadre entity)
		{
			this.SendPropertyChanging();
			entity.TblDireccion = null;
		}
		
		private void attach_TblProfesors(TblProfesor entity)
		{
			this.SendPropertyChanging();
			entity.TblDireccion = this;
		}
		
		private void detach_TblProfesors(TblProfesor entity)
		{
			this.SendPropertyChanging();
			entity.TblDireccion = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TblModederoNino")]
	public partial class TblModederoNino : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _idNino;
		
		private decimal _cantidad;
		
		private EntityRef<TblNino> _TblNino;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnidNinoChanging(System.Nullable<int> value);
    partial void OnidNinoChanged();
    partial void OncantidadChanging(decimal value);
    partial void OncantidadChanged();
    #endregion
		
		public TblModederoNino()
		{
			this._TblNino = default(EntityRef<TblNino>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idNino", DbType="Int")]
		public System.Nullable<int> idNino
		{
			get
			{
				return this._idNino;
			}
			set
			{
				if ((this._idNino != value))
				{
					if (this._TblNino.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidNinoChanging(value);
					this.SendPropertyChanging();
					this._idNino = value;
					this.SendPropertyChanged("idNino");
					this.OnidNinoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cantidad", DbType="Decimal(10,2) NOT NULL")]
		public decimal cantidad
		{
			get
			{
				return this._cantidad;
			}
			set
			{
				if ((this._cantidad != value))
				{
					this.OncantidadChanging(value);
					this.SendPropertyChanging();
					this._cantidad = value;
					this.SendPropertyChanged("cantidad");
					this.OncantidadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TblNino_TblModederoNino", Storage="_TblNino", ThisKey="idNino", OtherKey="id", IsForeignKey=true)]
		public TblNino TblNino
		{
			get
			{
				return this._TblNino.Entity;
			}
			set
			{
				TblNino previousValue = this._TblNino.Entity;
				if (((previousValue != value) 
							|| (this._TblNino.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TblNino.Entity = null;
						previousValue.TblModederoNinos.Remove(this);
					}
					this._TblNino.Entity = value;
					if ((value != null))
					{
						value.TblModederoNinos.Add(this);
						this._idNino = value.id;
					}
					else
					{
						this._idNino = default(Nullable<int>);
					}
					this.SendPropertyChanged("TblNino");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TblNino")]
	public partial class TblNino : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _strNombre;
		
		private string _strApellidoP;
		
		private string _strApellidoM;
		
		private System.Nullable<int> _intEdad;
		
		private string _strSexo;
		
		private string _strAlergia;
		
		private System.Nullable<int> _idPadre;
		
		private System.Nullable<int> _idUser;
		
		private System.Nullable<int> _idTaller;
		
		private EntitySet<TblAsignacionNino> _TblAsignacionNinos;
		
		private EntitySet<TblModederoNino> _TblModederoNinos;
		
		private EntityRef<TblUser> _TblUser;
		
		private EntityRef<TblPadre> _TblPadre;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnstrNombreChanging(string value);
    partial void OnstrNombreChanged();
    partial void OnstrApellidoPChanging(string value);
    partial void OnstrApellidoPChanged();
    partial void OnstrApellidoMChanging(string value);
    partial void OnstrApellidoMChanged();
    partial void OnintEdadChanging(System.Nullable<int> value);
    partial void OnintEdadChanged();
    partial void OnstrSexoChanging(string value);
    partial void OnstrSexoChanged();
    partial void OnstrAlergiaChanging(string value);
    partial void OnstrAlergiaChanged();
    partial void OnidPadreChanging(System.Nullable<int> value);
    partial void OnidPadreChanged();
    partial void OnidUserChanging(System.Nullable<int> value);
    partial void OnidUserChanged();
    partial void OnidTallerChanging(System.Nullable<int> value);
    partial void OnidTallerChanged();
    #endregion
		
		public TblNino()
		{
			this._TblAsignacionNinos = new EntitySet<TblAsignacionNino>(new Action<TblAsignacionNino>(this.attach_TblAsignacionNinos), new Action<TblAsignacionNino>(this.detach_TblAsignacionNinos));
			this._TblModederoNinos = new EntitySet<TblModederoNino>(new Action<TblModederoNino>(this.attach_TblModederoNinos), new Action<TblModederoNino>(this.detach_TblModederoNinos));
			this._TblUser = default(EntityRef<TblUser>);
			this._TblPadre = default(EntityRef<TblPadre>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strNombre", DbType="VarChar(200)")]
		public string strNombre
		{
			get
			{
				return this._strNombre;
			}
			set
			{
				if ((this._strNombre != value))
				{
					this.OnstrNombreChanging(value);
					this.SendPropertyChanging();
					this._strNombre = value;
					this.SendPropertyChanged("strNombre");
					this.OnstrNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strApellidoP", DbType="VarChar(200)")]
		public string strApellidoP
		{
			get
			{
				return this._strApellidoP;
			}
			set
			{
				if ((this._strApellidoP != value))
				{
					this.OnstrApellidoPChanging(value);
					this.SendPropertyChanging();
					this._strApellidoP = value;
					this.SendPropertyChanged("strApellidoP");
					this.OnstrApellidoPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strApellidoM", DbType="VarChar(200)")]
		public string strApellidoM
		{
			get
			{
				return this._strApellidoM;
			}
			set
			{
				if ((this._strApellidoM != value))
				{
					this.OnstrApellidoMChanging(value);
					this.SendPropertyChanging();
					this._strApellidoM = value;
					this.SendPropertyChanged("strApellidoM");
					this.OnstrApellidoMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_intEdad", DbType="Int")]
		public System.Nullable<int> intEdad
		{
			get
			{
				return this._intEdad;
			}
			set
			{
				if ((this._intEdad != value))
				{
					this.OnintEdadChanging(value);
					this.SendPropertyChanging();
					this._intEdad = value;
					this.SendPropertyChanged("intEdad");
					this.OnintEdadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strSexo", DbType="VarChar(200)")]
		public string strSexo
		{
			get
			{
				return this._strSexo;
			}
			set
			{
				if ((this._strSexo != value))
				{
					this.OnstrSexoChanging(value);
					this.SendPropertyChanging();
					this._strSexo = value;
					this.SendPropertyChanged("strSexo");
					this.OnstrSexoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strAlergia", DbType="VarChar(500)")]
		public string strAlergia
		{
			get
			{
				return this._strAlergia;
			}
			set
			{
				if ((this._strAlergia != value))
				{
					this.OnstrAlergiaChanging(value);
					this.SendPropertyChanging();
					this._strAlergia = value;
					this.SendPropertyChanged("strAlergia");
					this.OnstrAlergiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idPadre", DbType="Int")]
		public System.Nullable<int> idPadre
		{
			get
			{
				return this._idPadre;
			}
			set
			{
				if ((this._idPadre != value))
				{
					if (this._TblPadre.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidPadreChanging(value);
					this.SendPropertyChanging();
					this._idPadre = value;
					this.SendPropertyChanged("idPadre");
					this.OnidPadreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idUser", DbType="Int")]
		public System.Nullable<int> idUser
		{
			get
			{
				return this._idUser;
			}
			set
			{
				if ((this._idUser != value))
				{
					if (this._TblUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidUserChanging(value);
					this.SendPropertyChanging();
					this._idUser = value;
					this.SendPropertyChanged("idUser");
					this.OnidUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idTaller", DbType="Int")]
		public System.Nullable<int> idTaller
		{
			get
			{
				return this._idTaller;
			}
			set
			{
				if ((this._idTaller != value))
				{
					this.OnidTallerChanging(value);
					this.SendPropertyChanging();
					this._idTaller = value;
					this.SendPropertyChanged("idTaller");
					this.OnidTallerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TblNino_TblAsignacionNino", Storage="_TblAsignacionNinos", ThisKey="id", OtherKey="idNino")]
		public EntitySet<TblAsignacionNino> TblAsignacionNinos
		{
			get
			{
				return this._TblAsignacionNinos;
			}
			set
			{
				this._TblAsignacionNinos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TblNino_TblModederoNino", Storage="_TblModederoNinos", ThisKey="id", OtherKey="idNino")]
		public EntitySet<TblModederoNino> TblModederoNinos
		{
			get
			{
				return this._TblModederoNinos;
			}
			set
			{
				this._TblModederoNinos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TblUser_TblNino", Storage="_TblUser", ThisKey="idUser", OtherKey="id", IsForeignKey=true)]
		public TblUser TblUser
		{
			get
			{
				return this._TblUser.Entity;
			}
			set
			{
				TblUser previousValue = this._TblUser.Entity;
				if (((previousValue != value) 
							|| (this._TblUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TblUser.Entity = null;
						previousValue.TblNinos.Remove(this);
					}
					this._TblUser.Entity = value;
					if ((value != null))
					{
						value.TblNinos.Add(this);
						this._idUser = value.id;
					}
					else
					{
						this._idUser = default(Nullable<int>);
					}
					this.SendPropertyChanged("TblUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TblPadre_TblNino", Storage="_TblPadre", ThisKey="idPadre", OtherKey="id", IsForeignKey=true)]
		public TblPadre TblPadre
		{
			get
			{
				return this._TblPadre.Entity;
			}
			set
			{
				TblPadre previousValue = this._TblPadre.Entity;
				if (((previousValue != value) 
							|| (this._TblPadre.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TblPadre.Entity = null;
						previousValue.TblNinos.Remove(this);
					}
					this._TblPadre.Entity = value;
					if ((value != null))
					{
						value.TblNinos.Add(this);
						this._idPadre = value.id;
					}
					else
					{
						this._idPadre = default(Nullable<int>);
					}
					this.SendPropertyChanged("TblPadre");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TblAsignacionNinos(TblAsignacionNino entity)
		{
			this.SendPropertyChanging();
			entity.TblNino = this;
		}
		
		private void detach_TblAsignacionNinos(TblAsignacionNino entity)
		{
			this.SendPropertyChanging();
			entity.TblNino = null;
		}
		
		private void attach_TblModederoNinos(TblModederoNino entity)
		{
			this.SendPropertyChanging();
			entity.TblNino = this;
		}
		
		private void detach_TblModederoNinos(TblModederoNino entity)
		{
			this.SendPropertyChanging();
			entity.TblNino = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TblPadre")]
	public partial class TblPadre : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _strNombre;
		
		private string _strApellidoP;
		
		private string _strApellidoM;
		
		private System.Nullable<int> _intEdad;
		
		private string _strSexo;
		
		private string _strCorreo;
		
		private string _bitFoto;
		
		private System.Nullable<int> _idDireccion;
		
		private System.Nullable<int> _idTelefono;
		
		private System.Nullable<int> _idUser;
		
		private EntitySet<TblNino> _TblNinos;
		
		private EntityRef<TblDireccion> _TblDireccion;
		
		private EntityRef<TblUser> _TblUser;
		
		private EntityRef<TblTelefono> _TblTelefono;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnstrNombreChanging(string value);
    partial void OnstrNombreChanged();
    partial void OnstrApellidoPChanging(string value);
    partial void OnstrApellidoPChanged();
    partial void OnstrApellidoMChanging(string value);
    partial void OnstrApellidoMChanged();
    partial void OnintEdadChanging(System.Nullable<int> value);
    partial void OnintEdadChanged();
    partial void OnstrSexoChanging(string value);
    partial void OnstrSexoChanged();
    partial void OnstrCorreoChanging(string value);
    partial void OnstrCorreoChanged();
    partial void OnbitFotoChanging(string value);
    partial void OnbitFotoChanged();
    partial void OnidDireccionChanging(System.Nullable<int> value);
    partial void OnidDireccionChanged();
    partial void OnidTelefonoChanging(System.Nullable<int> value);
    partial void OnidTelefonoChanged();
    partial void OnidUserChanging(System.Nullable<int> value);
    partial void OnidUserChanged();
    #endregion
		
		public TblPadre()
		{
			this._TblNinos = new EntitySet<TblNino>(new Action<TblNino>(this.attach_TblNinos), new Action<TblNino>(this.detach_TblNinos));
			this._TblDireccion = default(EntityRef<TblDireccion>);
			this._TblUser = default(EntityRef<TblUser>);
			this._TblTelefono = default(EntityRef<TblTelefono>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strNombre", DbType="VarChar(200)")]
		public string strNombre
		{
			get
			{
				return this._strNombre;
			}
			set
			{
				if ((this._strNombre != value))
				{
					this.OnstrNombreChanging(value);
					this.SendPropertyChanging();
					this._strNombre = value;
					this.SendPropertyChanged("strNombre");
					this.OnstrNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strApellidoP", DbType="VarChar(200)")]
		public string strApellidoP
		{
			get
			{
				return this._strApellidoP;
			}
			set
			{
				if ((this._strApellidoP != value))
				{
					this.OnstrApellidoPChanging(value);
					this.SendPropertyChanging();
					this._strApellidoP = value;
					this.SendPropertyChanged("strApellidoP");
					this.OnstrApellidoPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strApellidoM", DbType="VarChar(200)")]
		public string strApellidoM
		{
			get
			{
				return this._strApellidoM;
			}
			set
			{
				if ((this._strApellidoM != value))
				{
					this.OnstrApellidoMChanging(value);
					this.SendPropertyChanging();
					this._strApellidoM = value;
					this.SendPropertyChanged("strApellidoM");
					this.OnstrApellidoMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_intEdad", DbType="Int")]
		public System.Nullable<int> intEdad
		{
			get
			{
				return this._intEdad;
			}
			set
			{
				if ((this._intEdad != value))
				{
					this.OnintEdadChanging(value);
					this.SendPropertyChanging();
					this._intEdad = value;
					this.SendPropertyChanged("intEdad");
					this.OnintEdadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strSexo", DbType="VarChar(100)")]
		public string strSexo
		{
			get
			{
				return this._strSexo;
			}
			set
			{
				if ((this._strSexo != value))
				{
					this.OnstrSexoChanging(value);
					this.SendPropertyChanging();
					this._strSexo = value;
					this.SendPropertyChanged("strSexo");
					this.OnstrSexoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strCorreo", DbType="VarChar(200)")]
		public string strCorreo
		{
			get
			{
				return this._strCorreo;
			}
			set
			{
				if ((this._strCorreo != value))
				{
					this.OnstrCorreoChanging(value);
					this.SendPropertyChanging();
					this._strCorreo = value;
					this.SendPropertyChanged("strCorreo");
					this.OnstrCorreoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bitFoto", DbType="VarChar(MAX)")]
		public string bitFoto
		{
			get
			{
				return this._bitFoto;
			}
			set
			{
				if ((this._bitFoto != value))
				{
					this.OnbitFotoChanging(value);
					this.SendPropertyChanging();
					this._bitFoto = value;
					this.SendPropertyChanged("bitFoto");
					this.OnbitFotoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idDireccion", DbType="Int")]
		public System.Nullable<int> idDireccion
		{
			get
			{
				return this._idDireccion;
			}
			set
			{
				if ((this._idDireccion != value))
				{
					if (this._TblDireccion.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidDireccionChanging(value);
					this.SendPropertyChanging();
					this._idDireccion = value;
					this.SendPropertyChanged("idDireccion");
					this.OnidDireccionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idTelefono", DbType="Int")]
		public System.Nullable<int> idTelefono
		{
			get
			{
				return this._idTelefono;
			}
			set
			{
				if ((this._idTelefono != value))
				{
					if (this._TblTelefono.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidTelefonoChanging(value);
					this.SendPropertyChanging();
					this._idTelefono = value;
					this.SendPropertyChanged("idTelefono");
					this.OnidTelefonoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idUser", DbType="Int")]
		public System.Nullable<int> idUser
		{
			get
			{
				return this._idUser;
			}
			set
			{
				if ((this._idUser != value))
				{
					if (this._TblUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidUserChanging(value);
					this.SendPropertyChanging();
					this._idUser = value;
					this.SendPropertyChanged("idUser");
					this.OnidUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TblPadre_TblNino", Storage="_TblNinos", ThisKey="id", OtherKey="idPadre")]
		public EntitySet<TblNino> TblNinos
		{
			get
			{
				return this._TblNinos;
			}
			set
			{
				this._TblNinos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TblDireccion_TblPadre", Storage="_TblDireccion", ThisKey="idDireccion", OtherKey="id", IsForeignKey=true)]
		public TblDireccion TblDireccion
		{
			get
			{
				return this._TblDireccion.Entity;
			}
			set
			{
				TblDireccion previousValue = this._TblDireccion.Entity;
				if (((previousValue != value) 
							|| (this._TblDireccion.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TblDireccion.Entity = null;
						previousValue.TblPadres.Remove(this);
					}
					this._TblDireccion.Entity = value;
					if ((value != null))
					{
						value.TblPadres.Add(this);
						this._idDireccion = value.id;
					}
					else
					{
						this._idDireccion = default(Nullable<int>);
					}
					this.SendPropertyChanged("TblDireccion");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TblUser_TblPadre", Storage="_TblUser", ThisKey="idUser", OtherKey="id", IsForeignKey=true)]
		public TblUser TblUser
		{
			get
			{
				return this._TblUser.Entity;
			}
			set
			{
				TblUser previousValue = this._TblUser.Entity;
				if (((previousValue != value) 
							|| (this._TblUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TblUser.Entity = null;
						previousValue.TblPadres.Remove(this);
					}
					this._TblUser.Entity = value;
					if ((value != null))
					{
						value.TblPadres.Add(this);
						this._idUser = value.id;
					}
					else
					{
						this._idUser = default(Nullable<int>);
					}
					this.SendPropertyChanged("TblUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TblTelefono_TblPadre", Storage="_TblTelefono", ThisKey="idTelefono", OtherKey="id", IsForeignKey=true)]
		public TblTelefono TblTelefono
		{
			get
			{
				return this._TblTelefono.Entity;
			}
			set
			{
				TblTelefono previousValue = this._TblTelefono.Entity;
				if (((previousValue != value) 
							|| (this._TblTelefono.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TblTelefono.Entity = null;
						previousValue.TblPadres.Remove(this);
					}
					this._TblTelefono.Entity = value;
					if ((value != null))
					{
						value.TblPadres.Add(this);
						this._idTelefono = value.id;
					}
					else
					{
						this._idTelefono = default(Nullable<int>);
					}
					this.SendPropertyChanged("TblTelefono");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TblNinos(TblNino entity)
		{
			this.SendPropertyChanging();
			entity.TblPadre = this;
		}
		
		private void detach_TblNinos(TblNino entity)
		{
			this.SendPropertyChanging();
			entity.TblPadre = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TblProfesor")]
	public partial class TblProfesor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _strNombre;
		
		private string _strApellidoP;
		
		private string _strApellidoM;
		
		private System.Nullable<int> _intEdad;
		
		private string _strSexo;
		
		private string _strCorreo;
		
		private string _bitFoto;
		
		private string _strCedula;
		
		private System.Nullable<int> _idDireccion;
		
		private System.Nullable<int> _idTelefono;
		
		private System.Nullable<int> _idUser;
		
		private System.Nullable<int> _idTaller;
		
		private EntitySet<TblAsignacionProfesor> _TblAsignacionProfesors;
		
		private EntityRef<TblDireccion> _TblDireccion;
		
		private EntityRef<TblUser> _TblUser;
		
		private EntityRef<TblTaller> _TblTaller;
		
		private EntityRef<TblTelefono> _TblTelefono;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnstrNombreChanging(string value);
    partial void OnstrNombreChanged();
    partial void OnstrApellidoPChanging(string value);
    partial void OnstrApellidoPChanged();
    partial void OnstrApellidoMChanging(string value);
    partial void OnstrApellidoMChanged();
    partial void OnintEdadChanging(System.Nullable<int> value);
    partial void OnintEdadChanged();
    partial void OnstrSexoChanging(string value);
    partial void OnstrSexoChanged();
    partial void OnstrCorreoChanging(string value);
    partial void OnstrCorreoChanged();
    partial void OnbitFotoChanging(string value);
    partial void OnbitFotoChanged();
    partial void OnstrCedulaChanging(string value);
    partial void OnstrCedulaChanged();
    partial void OnidDireccionChanging(System.Nullable<int> value);
    partial void OnidDireccionChanged();
    partial void OnidTelefonoChanging(System.Nullable<int> value);
    partial void OnidTelefonoChanged();
    partial void OnidUserChanging(System.Nullable<int> value);
    partial void OnidUserChanged();
    partial void OnidTallerChanging(System.Nullable<int> value);
    partial void OnidTallerChanged();
    #endregion
		
		public TblProfesor()
		{
			this._TblAsignacionProfesors = new EntitySet<TblAsignacionProfesor>(new Action<TblAsignacionProfesor>(this.attach_TblAsignacionProfesors), new Action<TblAsignacionProfesor>(this.detach_TblAsignacionProfesors));
			this._TblDireccion = default(EntityRef<TblDireccion>);
			this._TblUser = default(EntityRef<TblUser>);
			this._TblTaller = default(EntityRef<TblTaller>);
			this._TblTelefono = default(EntityRef<TblTelefono>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strNombre", DbType="VarChar(200)")]
		public string strNombre
		{
			get
			{
				return this._strNombre;
			}
			set
			{
				if ((this._strNombre != value))
				{
					this.OnstrNombreChanging(value);
					this.SendPropertyChanging();
					this._strNombre = value;
					this.SendPropertyChanged("strNombre");
					this.OnstrNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strApellidoP", DbType="VarChar(200)")]
		public string strApellidoP
		{
			get
			{
				return this._strApellidoP;
			}
			set
			{
				if ((this._strApellidoP != value))
				{
					this.OnstrApellidoPChanging(value);
					this.SendPropertyChanging();
					this._strApellidoP = value;
					this.SendPropertyChanged("strApellidoP");
					this.OnstrApellidoPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strApellidoM", DbType="VarChar(200)")]
		public string strApellidoM
		{
			get
			{
				return this._strApellidoM;
			}
			set
			{
				if ((this._strApellidoM != value))
				{
					this.OnstrApellidoMChanging(value);
					this.SendPropertyChanging();
					this._strApellidoM = value;
					this.SendPropertyChanged("strApellidoM");
					this.OnstrApellidoMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_intEdad", DbType="Int")]
		public System.Nullable<int> intEdad
		{
			get
			{
				return this._intEdad;
			}
			set
			{
				if ((this._intEdad != value))
				{
					this.OnintEdadChanging(value);
					this.SendPropertyChanging();
					this._intEdad = value;
					this.SendPropertyChanged("intEdad");
					this.OnintEdadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strSexo", DbType="VarChar(100)")]
		public string strSexo
		{
			get
			{
				return this._strSexo;
			}
			set
			{
				if ((this._strSexo != value))
				{
					this.OnstrSexoChanging(value);
					this.SendPropertyChanging();
					this._strSexo = value;
					this.SendPropertyChanged("strSexo");
					this.OnstrSexoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strCorreo", DbType="VarChar(200)")]
		public string strCorreo
		{
			get
			{
				return this._strCorreo;
			}
			set
			{
				if ((this._strCorreo != value))
				{
					this.OnstrCorreoChanging(value);
					this.SendPropertyChanging();
					this._strCorreo = value;
					this.SendPropertyChanged("strCorreo");
					this.OnstrCorreoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bitFoto", DbType="VarChar(MAX)")]
		public string bitFoto
		{
			get
			{
				return this._bitFoto;
			}
			set
			{
				if ((this._bitFoto != value))
				{
					this.OnbitFotoChanging(value);
					this.SendPropertyChanging();
					this._bitFoto = value;
					this.SendPropertyChanged("bitFoto");
					this.OnbitFotoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strCedula", DbType="VarChar(200)")]
		public string strCedula
		{
			get
			{
				return this._strCedula;
			}
			set
			{
				if ((this._strCedula != value))
				{
					this.OnstrCedulaChanging(value);
					this.SendPropertyChanging();
					this._strCedula = value;
					this.SendPropertyChanged("strCedula");
					this.OnstrCedulaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idDireccion", DbType="Int")]
		public System.Nullable<int> idDireccion
		{
			get
			{
				return this._idDireccion;
			}
			set
			{
				if ((this._idDireccion != value))
				{
					if (this._TblDireccion.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidDireccionChanging(value);
					this.SendPropertyChanging();
					this._idDireccion = value;
					this.SendPropertyChanged("idDireccion");
					this.OnidDireccionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idTelefono", DbType="Int")]
		public System.Nullable<int> idTelefono
		{
			get
			{
				return this._idTelefono;
			}
			set
			{
				if ((this._idTelefono != value))
				{
					if (this._TblTelefono.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidTelefonoChanging(value);
					this.SendPropertyChanging();
					this._idTelefono = value;
					this.SendPropertyChanged("idTelefono");
					this.OnidTelefonoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idUser", DbType="Int")]
		public System.Nullable<int> idUser
		{
			get
			{
				return this._idUser;
			}
			set
			{
				if ((this._idUser != value))
				{
					if (this._TblUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidUserChanging(value);
					this.SendPropertyChanging();
					this._idUser = value;
					this.SendPropertyChanged("idUser");
					this.OnidUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idTaller", DbType="Int")]
		public System.Nullable<int> idTaller
		{
			get
			{
				return this._idTaller;
			}
			set
			{
				if ((this._idTaller != value))
				{
					if (this._TblTaller.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidTallerChanging(value);
					this.SendPropertyChanging();
					this._idTaller = value;
					this.SendPropertyChanged("idTaller");
					this.OnidTallerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TblProfesor_TblAsignacionProfesor", Storage="_TblAsignacionProfesors", ThisKey="id", OtherKey="idProfesor")]
		public EntitySet<TblAsignacionProfesor> TblAsignacionProfesors
		{
			get
			{
				return this._TblAsignacionProfesors;
			}
			set
			{
				this._TblAsignacionProfesors.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TblDireccion_TblProfesor", Storage="_TblDireccion", ThisKey="idDireccion", OtherKey="id", IsForeignKey=true)]
		public TblDireccion TblDireccion
		{
			get
			{
				return this._TblDireccion.Entity;
			}
			set
			{
				TblDireccion previousValue = this._TblDireccion.Entity;
				if (((previousValue != value) 
							|| (this._TblDireccion.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TblDireccion.Entity = null;
						previousValue.TblProfesors.Remove(this);
					}
					this._TblDireccion.Entity = value;
					if ((value != null))
					{
						value.TblProfesors.Add(this);
						this._idDireccion = value.id;
					}
					else
					{
						this._idDireccion = default(Nullable<int>);
					}
					this.SendPropertyChanged("TblDireccion");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TblUser_TblProfesor", Storage="_TblUser", ThisKey="idUser", OtherKey="id", IsForeignKey=true)]
		public TblUser TblUser
		{
			get
			{
				return this._TblUser.Entity;
			}
			set
			{
				TblUser previousValue = this._TblUser.Entity;
				if (((previousValue != value) 
							|| (this._TblUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TblUser.Entity = null;
						previousValue.TblProfesors.Remove(this);
					}
					this._TblUser.Entity = value;
					if ((value != null))
					{
						value.TblProfesors.Add(this);
						this._idUser = value.id;
					}
					else
					{
						this._idUser = default(Nullable<int>);
					}
					this.SendPropertyChanged("TblUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TblTaller_TblProfesor", Storage="_TblTaller", ThisKey="idTaller", OtherKey="id", IsForeignKey=true)]
		public TblTaller TblTaller
		{
			get
			{
				return this._TblTaller.Entity;
			}
			set
			{
				TblTaller previousValue = this._TblTaller.Entity;
				if (((previousValue != value) 
							|| (this._TblTaller.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TblTaller.Entity = null;
						previousValue.TblProfesors.Remove(this);
					}
					this._TblTaller.Entity = value;
					if ((value != null))
					{
						value.TblProfesors.Add(this);
						this._idTaller = value.id;
					}
					else
					{
						this._idTaller = default(Nullable<int>);
					}
					this.SendPropertyChanged("TblTaller");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TblTelefono_TblProfesor", Storage="_TblTelefono", ThisKey="idTelefono", OtherKey="id", IsForeignKey=true)]
		public TblTelefono TblTelefono
		{
			get
			{
				return this._TblTelefono.Entity;
			}
			set
			{
				TblTelefono previousValue = this._TblTelefono.Entity;
				if (((previousValue != value) 
							|| (this._TblTelefono.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TblTelefono.Entity = null;
						previousValue.TblProfesors.Remove(this);
					}
					this._TblTelefono.Entity = value;
					if ((value != null))
					{
						value.TblProfesors.Add(this);
						this._idTelefono = value.id;
					}
					else
					{
						this._idTelefono = default(Nullable<int>);
					}
					this.SendPropertyChanged("TblTelefono");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TblAsignacionProfesors(TblAsignacionProfesor entity)
		{
			this.SendPropertyChanging();
			entity.TblProfesor = this;
		}
		
		private void detach_TblAsignacionProfesors(TblAsignacionProfesor entity)
		{
			this.SendPropertyChanging();
			entity.TblProfesor = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TblTaller")]
	public partial class TblTaller : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _strNombre;
		
		private string _strDescripcion;
		
		private string _strStatus;
		
		private EntitySet<TblActividadTaller> _TblActividadTallers;
		
		private EntitySet<TblAsignacionProfesor> _TblAsignacionProfesors;
		
		private EntitySet<TblProfesor> _TblProfesors;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnstrNombreChanging(string value);
    partial void OnstrNombreChanged();
    partial void OnstrDescripcionChanging(string value);
    partial void OnstrDescripcionChanged();
    partial void OnstrStatusChanging(string value);
    partial void OnstrStatusChanged();
    #endregion
		
		public TblTaller()
		{
			this._TblActividadTallers = new EntitySet<TblActividadTaller>(new Action<TblActividadTaller>(this.attach_TblActividadTallers), new Action<TblActividadTaller>(this.detach_TblActividadTallers));
			this._TblAsignacionProfesors = new EntitySet<TblAsignacionProfesor>(new Action<TblAsignacionProfesor>(this.attach_TblAsignacionProfesors), new Action<TblAsignacionProfesor>(this.detach_TblAsignacionProfesors));
			this._TblProfesors = new EntitySet<TblProfesor>(new Action<TblProfesor>(this.attach_TblProfesors), new Action<TblProfesor>(this.detach_TblProfesors));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strNombre", DbType="VarChar(250)")]
		public string strNombre
		{
			get
			{
				return this._strNombre;
			}
			set
			{
				if ((this._strNombre != value))
				{
					this.OnstrNombreChanging(value);
					this.SendPropertyChanging();
					this._strNombre = value;
					this.SendPropertyChanged("strNombre");
					this.OnstrNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strDescripcion", DbType="VarChar(500)")]
		public string strDescripcion
		{
			get
			{
				return this._strDescripcion;
			}
			set
			{
				if ((this._strDescripcion != value))
				{
					this.OnstrDescripcionChanging(value);
					this.SendPropertyChanging();
					this._strDescripcion = value;
					this.SendPropertyChanged("strDescripcion");
					this.OnstrDescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strStatus", DbType="VarChar(50)")]
		public string strStatus
		{
			get
			{
				return this._strStatus;
			}
			set
			{
				if ((this._strStatus != value))
				{
					this.OnstrStatusChanging(value);
					this.SendPropertyChanging();
					this._strStatus = value;
					this.SendPropertyChanged("strStatus");
					this.OnstrStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TblTaller_TblActividadTaller", Storage="_TblActividadTallers", ThisKey="id", OtherKey="idTaller")]
		public EntitySet<TblActividadTaller> TblActividadTallers
		{
			get
			{
				return this._TblActividadTallers;
			}
			set
			{
				this._TblActividadTallers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TblTaller_TblAsignacionProfesor", Storage="_TblAsignacionProfesors", ThisKey="id", OtherKey="idTaller")]
		public EntitySet<TblAsignacionProfesor> TblAsignacionProfesors
		{
			get
			{
				return this._TblAsignacionProfesors;
			}
			set
			{
				this._TblAsignacionProfesors.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TblTaller_TblProfesor", Storage="_TblProfesors", ThisKey="id", OtherKey="idTaller")]
		public EntitySet<TblProfesor> TblProfesors
		{
			get
			{
				return this._TblProfesors;
			}
			set
			{
				this._TblProfesors.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TblActividadTallers(TblActividadTaller entity)
		{
			this.SendPropertyChanging();
			entity.TblTaller = this;
		}
		
		private void detach_TblActividadTallers(TblActividadTaller entity)
		{
			this.SendPropertyChanging();
			entity.TblTaller = null;
		}
		
		private void attach_TblAsignacionProfesors(TblAsignacionProfesor entity)
		{
			this.SendPropertyChanging();
			entity.TblTaller = this;
		}
		
		private void detach_TblAsignacionProfesors(TblAsignacionProfesor entity)
		{
			this.SendPropertyChanging();
			entity.TblTaller = null;
		}
		
		private void attach_TblProfesors(TblProfesor entity)
		{
			this.SendPropertyChanging();
			entity.TblTaller = this;
		}
		
		private void detach_TblProfesors(TblProfesor entity)
		{
			this.SendPropertyChanging();
			entity.TblTaller = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TblTelefono")]
	public partial class TblTelefono : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _strcelular;
		
		private string _strtelCasa;
		
		private string _strotro;
		
		private EntitySet<TblPadre> _TblPadres;
		
		private EntitySet<TblProfesor> _TblProfesors;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnstrcelularChanging(string value);
    partial void OnstrcelularChanged();
    partial void OnstrtelCasaChanging(string value);
    partial void OnstrtelCasaChanged();
    partial void OnstrotroChanging(string value);
    partial void OnstrotroChanged();
    #endregion
		
		public TblTelefono()
		{
			this._TblPadres = new EntitySet<TblPadre>(new Action<TblPadre>(this.attach_TblPadres), new Action<TblPadre>(this.detach_TblPadres));
			this._TblProfesors = new EntitySet<TblProfesor>(new Action<TblProfesor>(this.attach_TblProfesors), new Action<TblProfesor>(this.detach_TblProfesors));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strcelular", DbType="VarChar(50)")]
		public string strcelular
		{
			get
			{
				return this._strcelular;
			}
			set
			{
				if ((this._strcelular != value))
				{
					this.OnstrcelularChanging(value);
					this.SendPropertyChanging();
					this._strcelular = value;
					this.SendPropertyChanged("strcelular");
					this.OnstrcelularChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strtelCasa", DbType="VarChar(50)")]
		public string strtelCasa
		{
			get
			{
				return this._strtelCasa;
			}
			set
			{
				if ((this._strtelCasa != value))
				{
					this.OnstrtelCasaChanging(value);
					this.SendPropertyChanging();
					this._strtelCasa = value;
					this.SendPropertyChanged("strtelCasa");
					this.OnstrtelCasaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strotro", DbType="VarChar(50)")]
		public string strotro
		{
			get
			{
				return this._strotro;
			}
			set
			{
				if ((this._strotro != value))
				{
					this.OnstrotroChanging(value);
					this.SendPropertyChanging();
					this._strotro = value;
					this.SendPropertyChanged("strotro");
					this.OnstrotroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TblTelefono_TblPadre", Storage="_TblPadres", ThisKey="id", OtherKey="idTelefono")]
		public EntitySet<TblPadre> TblPadres
		{
			get
			{
				return this._TblPadres;
			}
			set
			{
				this._TblPadres.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TblTelefono_TblProfesor", Storage="_TblProfesors", ThisKey="id", OtherKey="idTelefono")]
		public EntitySet<TblProfesor> TblProfesors
		{
			get
			{
				return this._TblProfesors;
			}
			set
			{
				this._TblProfesors.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TblPadres(TblPadre entity)
		{
			this.SendPropertyChanging();
			entity.TblTelefono = this;
		}
		
		private void detach_TblPadres(TblPadre entity)
		{
			this.SendPropertyChanging();
			entity.TblTelefono = null;
		}
		
		private void attach_TblProfesors(TblProfesor entity)
		{
			this.SendPropertyChanging();
			entity.TblTelefono = this;
		}
		
		private void detach_TblProfesors(TblProfesor entity)
		{
			this.SendPropertyChanging();
			entity.TblTelefono = null;
		}
	}
}
#pragma warning restore 1591
